before_script:
  - rm -rf "*-env"; virtualenv -p python3 ${CI_JOB_ID}-env
  - ${CI_JOB_ID}-env/bin/pip3 install -r requirements.txt

after_script:
  - 'killall --user $USER'
  - rm -rf ${CI_JOB_ID}-env

stages:
  - pypi_deploy_external

DeployExternal:
  stage: pypi_deploy_external
  tags:
    - CI_TrackPerformanceLRZ
  only:
    - master
  script:
    - ${CI_JOB_ID}-env/bin/python3 -m pip install --upgrade setuptools wheel
    - ${CI_JOB_ID}-env/bin/python3 setup.py sdist bdist_wheel
    - ${CI_JOB_ID}-env/bin/pip3 install --upgrade twine
    - python3 -m twine upload --username ${PYPI_USER_HERRMANN} --password ${PYPI_TOKEN_HERRMANN} dist/*
  allow_failure: false

Documentation:
  stage: pypi_deploy_external
  tags:
    - CI_TrackPerformanceLRZ
  only:
    - master
  script:
    - ${CI_JOB_ID}-env/bin/sphinx-apidoc -f -o ./docs/source velocity_optimization
    - ${CI_JOB_ID}-env/bin/sphinx-build -b html docs/source docs/build
  artifacts:
    when: always
    paths:
      - docs/build
  allow_failure: false
